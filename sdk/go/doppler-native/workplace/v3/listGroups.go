// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListGroups(ctx *pulumi.Context, args *ListGroupsArgs, opts ...pulumi.InvokeOption) (*ListGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListGroupsResult
	err := ctx.Invoke("doppler-native:workplace/v3:listGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListGroupsArgs struct {
}

type ListGroupsResult struct {
	Items ListGroupsProperties `pulumi:"items"`
}

func ListGroupsOutput(ctx *pulumi.Context, args ListGroupsOutputArgs, opts ...pulumi.InvokeOption) ListGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListGroupsResult, error) {
			args := v.(ListGroupsArgs)
			r, err := ListGroups(ctx, &args, opts...)
			var s ListGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListGroupsResultOutput)
}

type ListGroupsOutputArgs struct {
}

func (ListGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGroupsArgs)(nil)).Elem()
}

type ListGroupsResultOutput struct{ *pulumi.OutputState }

func (ListGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGroupsResult)(nil)).Elem()
}

func (o ListGroupsResultOutput) ToListGroupsResultOutput() ListGroupsResultOutput {
	return o
}

func (o ListGroupsResultOutput) ToListGroupsResultOutputWithContext(ctx context.Context) ListGroupsResultOutput {
	return o
}

func (o ListGroupsResultOutput) Items() ListGroupsPropertiesOutput {
	return o.ApplyT(func(v ListGroupsResult) ListGroupsProperties { return v.Items }).(ListGroupsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListGroupsResultOutput{})
}
