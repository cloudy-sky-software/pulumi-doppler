// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListWorkplaceRolesPermissions(ctx *pulumi.Context, args *ListWorkplaceRolesPermissionsArgs, opts ...pulumi.InvokeOption) (*ListWorkplaceRolesPermissionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListWorkplaceRolesPermissionsResult
	err := ctx.Invoke("doppler-native:workplace/v3:listWorkplaceRolesPermissions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListWorkplaceRolesPermissionsArgs struct {
}

type ListWorkplaceRolesPermissionsResult struct {
	Items ListWorkplaceRolesPermissionsProperties `pulumi:"items"`
}

func ListWorkplaceRolesPermissionsOutput(ctx *pulumi.Context, args ListWorkplaceRolesPermissionsOutputArgs, opts ...pulumi.InvokeOption) ListWorkplaceRolesPermissionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListWorkplaceRolesPermissionsResult, error) {
			args := v.(ListWorkplaceRolesPermissionsArgs)
			r, err := ListWorkplaceRolesPermissions(ctx, &args, opts...)
			var s ListWorkplaceRolesPermissionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListWorkplaceRolesPermissionsResultOutput)
}

type ListWorkplaceRolesPermissionsOutputArgs struct {
}

func (ListWorkplaceRolesPermissionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkplaceRolesPermissionsArgs)(nil)).Elem()
}

type ListWorkplaceRolesPermissionsResultOutput struct{ *pulumi.OutputState }

func (ListWorkplaceRolesPermissionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkplaceRolesPermissionsResult)(nil)).Elem()
}

func (o ListWorkplaceRolesPermissionsResultOutput) ToListWorkplaceRolesPermissionsResultOutput() ListWorkplaceRolesPermissionsResultOutput {
	return o
}

func (o ListWorkplaceRolesPermissionsResultOutput) ToListWorkplaceRolesPermissionsResultOutputWithContext(ctx context.Context) ListWorkplaceRolesPermissionsResultOutput {
	return o
}

func (o ListWorkplaceRolesPermissionsResultOutput) Items() ListWorkplaceRolesPermissionsPropertiesOutput {
	return o.ApplyT(func(v ListWorkplaceRolesPermissionsResult) ListWorkplaceRolesPermissionsProperties { return v.Items }).(ListWorkplaceRolesPermissionsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListWorkplaceRolesPermissionsResultOutput{})
}
