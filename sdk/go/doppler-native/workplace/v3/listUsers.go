// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListUsers(ctx *pulumi.Context, args *ListUsersArgs, opts ...pulumi.InvokeOption) (*ListUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListUsersResult
	err := ctx.Invoke("doppler-native:workplace/v3:listUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type ListUsersArgs struct {
}

type ListUsersResult struct {
	Items ListUsersProperties `pulumi:"items"`
}

// Defaults sets the appropriate defaults for ListUsersResult
func (val *ListUsersResult) Defaults() *ListUsersResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func ListUsersOutput(ctx *pulumi.Context, args ListUsersOutputArgs, opts ...pulumi.InvokeOption) ListUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListUsersResult, error) {
			args := v.(ListUsersArgs)
			r, err := ListUsers(ctx, &args, opts...)
			var s ListUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListUsersResultOutput)
}

type ListUsersOutputArgs struct {
}

func (ListUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUsersArgs)(nil)).Elem()
}

type ListUsersResultOutput struct{ *pulumi.OutputState }

func (ListUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUsersResult)(nil)).Elem()
}

func (o ListUsersResultOutput) ToListUsersResultOutput() ListUsersResultOutput {
	return o
}

func (o ListUsersResultOutput) ToListUsersResultOutputWithContext(ctx context.Context) ListUsersResultOutput {
	return o
}

func (o ListUsersResultOutput) Items() ListUsersPropertiesOutput {
	return o.ApplyT(func(v ListUsersResult) ListUsersProperties { return v.Items }).(ListUsersPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListUsersResultOutput{})
}
