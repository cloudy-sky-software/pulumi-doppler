// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListInvites(ctx *pulumi.Context, args *ListInvitesArgs, opts ...pulumi.InvokeOption) (*ListInvitesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListInvitesResult
	err := ctx.Invoke("doppler-native:workplace/v3:listInvites", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListInvitesArgs struct {
}

type ListInvitesResult struct {
	Items ListInvitesProperties `pulumi:"items"`
}

func ListInvitesOutput(ctx *pulumi.Context, args ListInvitesOutputArgs, opts ...pulumi.InvokeOption) ListInvitesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListInvitesResult, error) {
			args := v.(ListInvitesArgs)
			r, err := ListInvites(ctx, &args, opts...)
			var s ListInvitesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListInvitesResultOutput)
}

type ListInvitesOutputArgs struct {
}

func (ListInvitesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListInvitesArgs)(nil)).Elem()
}

type ListInvitesResultOutput struct{ *pulumi.OutputState }

func (ListInvitesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListInvitesResult)(nil)).Elem()
}

func (o ListInvitesResultOutput) ToListInvitesResultOutput() ListInvitesResultOutput {
	return o
}

func (o ListInvitesResultOutput) ToListInvitesResultOutputWithContext(ctx context.Context) ListInvitesResultOutput {
	return o
}

func (o ListInvitesResultOutput) Items() ListInvitesPropertiesOutput {
	return o.ApplyT(func(v ListInvitesResult) ListInvitesProperties { return v.Items }).(ListInvitesPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListInvitesResultOutput{})
}
