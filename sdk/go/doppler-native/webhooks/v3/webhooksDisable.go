// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebhooksDisable struct {
	pulumi.CustomResourceState
}

// NewWebhooksDisable registers a new resource with the given unique name, arguments, and options.
func NewWebhooksDisable(ctx *pulumi.Context,
	name string, args *WebhooksDisableArgs, opts ...pulumi.ResourceOption) (*WebhooksDisable, error) {
	if args == nil {
		args = &WebhooksDisableArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhooksDisable
	err := ctx.RegisterResource("doppler-native:webhooks/v3:WebhooksDisable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhooksDisable gets an existing WebhooksDisable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhooksDisable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhooksDisableState, opts ...pulumi.ResourceOption) (*WebhooksDisable, error) {
	var resource WebhooksDisable
	err := ctx.ReadResource("doppler-native:webhooks/v3:WebhooksDisable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhooksDisable resources.
type webhooksDisableState struct {
}

type WebhooksDisableState struct {
}

func (WebhooksDisableState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksDisableState)(nil)).Elem()
}

type webhooksDisableArgs struct {
	// Webhook's slug
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a WebhooksDisable resource.
type WebhooksDisableArgs struct {
	// Webhook's slug
	Slug pulumi.StringPtrInput
}

func (WebhooksDisableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksDisableArgs)(nil)).Elem()
}

type WebhooksDisableInput interface {
	pulumi.Input

	ToWebhooksDisableOutput() WebhooksDisableOutput
	ToWebhooksDisableOutputWithContext(ctx context.Context) WebhooksDisableOutput
}

func (*WebhooksDisable) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksDisable)(nil)).Elem()
}

func (i *WebhooksDisable) ToWebhooksDisableOutput() WebhooksDisableOutput {
	return i.ToWebhooksDisableOutputWithContext(context.Background())
}

func (i *WebhooksDisable) ToWebhooksDisableOutputWithContext(ctx context.Context) WebhooksDisableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksDisableOutput)
}

type WebhooksDisableOutput struct{ *pulumi.OutputState }

func (WebhooksDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksDisable)(nil)).Elem()
}

func (o WebhooksDisableOutput) ToWebhooksDisableOutput() WebhooksDisableOutput {
	return o
}

func (o WebhooksDisableOutput) ToWebhooksDisableOutputWithContext(ctx context.Context) WebhooksDisableOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksDisableInput)(nil)).Elem(), &WebhooksDisable{})
	pulumi.RegisterOutputType(WebhooksDisableOutput{})
}
