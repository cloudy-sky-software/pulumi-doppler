// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Webhooks struct {
	pulumi.CustomResourceState

	Authentication AuthenticationPropertiesPtrOutput `pulumi:"authentication"`
	// Config slugs that the webhook should be enabled for
	EnableConfigs pulumi.StringArrayOutput `pulumi:"enableConfigs"`
	// See: https://docs.doppler.com/docs/webhooks#default-payload
	Payload pulumi.StringPtrOutput `pulumi:"payload"`
	// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
	Secret pulumi.StringPtrOutput `pulumi:"secret"`
	// The webhook URL. Must be https
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewWebhooks registers a new resource with the given unique name, arguments, and options.
func NewWebhooks(ctx *pulumi.Context,
	name string, args *WebhooksArgs, opts ...pulumi.ResourceOption) (*Webhooks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Webhooks
	err := ctx.RegisterResource("doppler-native:webhooks/v3:Webhooks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhooks gets an existing Webhooks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhooks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhooksState, opts ...pulumi.ResourceOption) (*Webhooks, error) {
	var resource Webhooks
	err := ctx.ReadResource("doppler-native:webhooks/v3:Webhooks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhooks resources.
type webhooksState struct {
}

type WebhooksState struct {
}

func (WebhooksState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksState)(nil)).Elem()
}

type webhooksArgs struct {
	Authentication *AuthenticationProperties `pulumi:"authentication"`
	// Config slugs that the webhook should be enabled for
	EnableConfigs []string `pulumi:"enableConfigs"`
	// See: https://docs.doppler.com/docs/webhooks#default-payload
	Payload *string `pulumi:"payload"`
	// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
	Secret *string `pulumi:"secret"`
	// The webhook URL. Must be https
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a Webhooks resource.
type WebhooksArgs struct {
	Authentication AuthenticationPropertiesPtrInput
	// Config slugs that the webhook should be enabled for
	EnableConfigs pulumi.StringArrayInput
	// See: https://docs.doppler.com/docs/webhooks#default-payload
	Payload pulumi.StringPtrInput
	// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
	Secret pulumi.StringPtrInput
	// The webhook URL. Must be https
	Url pulumi.StringInput
}

func (WebhooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksArgs)(nil)).Elem()
}

type WebhooksInput interface {
	pulumi.Input

	ToWebhooksOutput() WebhooksOutput
	ToWebhooksOutputWithContext(ctx context.Context) WebhooksOutput
}

func (*Webhooks) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhooks)(nil)).Elem()
}

func (i *Webhooks) ToWebhooksOutput() WebhooksOutput {
	return i.ToWebhooksOutputWithContext(context.Background())
}

func (i *Webhooks) ToWebhooksOutputWithContext(ctx context.Context) WebhooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksOutput)
}

type WebhooksOutput struct{ *pulumi.OutputState }

func (WebhooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhooks)(nil)).Elem()
}

func (o WebhooksOutput) ToWebhooksOutput() WebhooksOutput {
	return o
}

func (o WebhooksOutput) ToWebhooksOutputWithContext(ctx context.Context) WebhooksOutput {
	return o
}

func (o WebhooksOutput) Authentication() AuthenticationPropertiesPtrOutput {
	return o.ApplyT(func(v *Webhooks) AuthenticationPropertiesPtrOutput { return v.Authentication }).(AuthenticationPropertiesPtrOutput)
}

// Config slugs that the webhook should be enabled for
func (o WebhooksOutput) EnableConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Webhooks) pulumi.StringArrayOutput { return v.EnableConfigs }).(pulumi.StringArrayOutput)
}

// See: https://docs.doppler.com/docs/webhooks#default-payload
func (o WebhooksOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhooks) pulumi.StringPtrOutput { return v.Payload }).(pulumi.StringPtrOutput)
}

// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
func (o WebhooksOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhooks) pulumi.StringPtrOutput { return v.Secret }).(pulumi.StringPtrOutput)
}

// The webhook URL. Must be https
func (o WebhooksOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhooks) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksInput)(nil)).Elem(), &Webhooks{})
	pulumi.RegisterOutputType(WebhooksOutput{})
}
