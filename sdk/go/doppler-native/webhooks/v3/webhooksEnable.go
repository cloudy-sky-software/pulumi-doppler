// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebhooksEnable struct {
	pulumi.CustomResourceState
}

// NewWebhooksEnable registers a new resource with the given unique name, arguments, and options.
func NewWebhooksEnable(ctx *pulumi.Context,
	name string, args *WebhooksEnableArgs, opts ...pulumi.ResourceOption) (*WebhooksEnable, error) {
	if args == nil {
		args = &WebhooksEnableArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhooksEnable
	err := ctx.RegisterResource("doppler-native:webhooks/v3:WebhooksEnable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhooksEnable gets an existing WebhooksEnable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhooksEnable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhooksEnableState, opts ...pulumi.ResourceOption) (*WebhooksEnable, error) {
	var resource WebhooksEnable
	err := ctx.ReadResource("doppler-native:webhooks/v3:WebhooksEnable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhooksEnable resources.
type webhooksEnableState struct {
}

type WebhooksEnableState struct {
}

func (WebhooksEnableState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksEnableState)(nil)).Elem()
}

type webhooksEnableArgs struct {
	// Webhook's slug
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a WebhooksEnable resource.
type WebhooksEnableArgs struct {
	// Webhook's slug
	Slug pulumi.StringPtrInput
}

func (WebhooksEnableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhooksEnableArgs)(nil)).Elem()
}

type WebhooksEnableInput interface {
	pulumi.Input

	ToWebhooksEnableOutput() WebhooksEnableOutput
	ToWebhooksEnableOutputWithContext(ctx context.Context) WebhooksEnableOutput
}

func (*WebhooksEnable) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksEnable)(nil)).Elem()
}

func (i *WebhooksEnable) ToWebhooksEnableOutput() WebhooksEnableOutput {
	return i.ToWebhooksEnableOutputWithContext(context.Background())
}

func (i *WebhooksEnable) ToWebhooksEnableOutputWithContext(ctx context.Context) WebhooksEnableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhooksEnableOutput)
}

type WebhooksEnableOutput struct{ *pulumi.OutputState }

func (WebhooksEnableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhooksEnable)(nil)).Elem()
}

func (o WebhooksEnableOutput) ToWebhooksEnableOutput() WebhooksEnableOutput {
	return o
}

func (o WebhooksEnableOutput) ToWebhooksEnableOutputWithContext(ctx context.Context) WebhooksEnableOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhooksEnableInput)(nil)).Elem(), &WebhooksEnable{})
	pulumi.RegisterOutputType(WebhooksEnableOutput{})
}
