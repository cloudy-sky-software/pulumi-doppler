// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSecrets(ctx *pulumi.Context, args *ListSecretsArgs, opts ...pulumi.InvokeOption) (*ListSecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSecretsResult
	err := ctx.Invoke("doppler-native:configs/v3:listSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSecretsArgs struct {
}

type ListSecretsResult struct {
	Items ListSecretsProperties `pulumi:"items"`
}

func ListSecretsOutput(ctx *pulumi.Context, args ListSecretsOutputArgs, opts ...pulumi.InvokeOption) ListSecretsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSecretsResult, error) {
			args := v.(ListSecretsArgs)
			r, err := ListSecrets(ctx, &args, opts...)
			var s ListSecretsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListSecretsResultOutput)
}

type ListSecretsOutputArgs struct {
}

func (ListSecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecretsArgs)(nil)).Elem()
}

type ListSecretsResultOutput struct{ *pulumi.OutputState }

func (ListSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecretsResult)(nil)).Elem()
}

func (o ListSecretsResultOutput) ToListSecretsResultOutput() ListSecretsResultOutput {
	return o
}

func (o ListSecretsResultOutput) ToListSecretsResultOutputWithContext(ctx context.Context) ListSecretsResultOutput {
	return o
}

func (o ListSecretsResultOutput) Items() ListSecretsPropertiesOutput {
	return o.ApplyT(func(v ListSecretsResult) ListSecretsProperties { return v.Items }).(ListSecretsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSecretsResultOutput{})
}
