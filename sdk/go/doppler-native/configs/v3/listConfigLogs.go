// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListConfigLogs(ctx *pulumi.Context, args *ListConfigLogsArgs, opts ...pulumi.InvokeOption) (*ListConfigLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListConfigLogsResult
	err := ctx.Invoke("doppler-native:configs/v3:listConfigLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type ListConfigLogsArgs struct {
}

type ListConfigLogsResult struct {
	Items ListConfigLogsProperties `pulumi:"items"`
}

// Defaults sets the appropriate defaults for ListConfigLogsResult
func (val *ListConfigLogsResult) Defaults() *ListConfigLogsResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func ListConfigLogsOutput(ctx *pulumi.Context, args ListConfigLogsOutputArgs, opts ...pulumi.InvokeOption) ListConfigLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListConfigLogsResult, error) {
			args := v.(ListConfigLogsArgs)
			r, err := ListConfigLogs(ctx, &args, opts...)
			var s ListConfigLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListConfigLogsResultOutput)
}

type ListConfigLogsOutputArgs struct {
}

func (ListConfigLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListConfigLogsArgs)(nil)).Elem()
}

type ListConfigLogsResultOutput struct{ *pulumi.OutputState }

func (ListConfigLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListConfigLogsResult)(nil)).Elem()
}

func (o ListConfigLogsResultOutput) ToListConfigLogsResultOutput() ListConfigLogsResultOutput {
	return o
}

func (o ListConfigLogsResultOutput) ToListConfigLogsResultOutputWithContext(ctx context.Context) ListConfigLogsResultOutput {
	return o
}

func (o ListConfigLogsResultOutput) Items() ListConfigLogsPropertiesOutput {
	return o.ApplyT(func(v ListConfigLogsResult) ListConfigLogsProperties { return v.Items }).(ListConfigLogsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(ListConfigLogsResultOutput{})
}
