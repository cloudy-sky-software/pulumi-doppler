// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigLogsRollback struct {
	pulumi.CustomResourceState

	Log LogPropertiesPtrOutput `pulumi:"log"`
}

// NewConfigLogsRollback registers a new resource with the given unique name, arguments, and options.
func NewConfigLogsRollback(ctx *pulumi.Context,
	name string, args *ConfigLogsRollbackArgs, opts ...pulumi.ResourceOption) (*ConfigLogsRollback, error) {
	if args == nil {
		args = &ConfigLogsRollbackArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigLogsRollback
	err := ctx.RegisterResource("doppler-native:configs/v3:ConfigLogsRollback", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigLogsRollback gets an existing ConfigLogsRollback resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigLogsRollback(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigLogsRollbackState, opts ...pulumi.ResourceOption) (*ConfigLogsRollback, error) {
	var resource ConfigLogsRollback
	err := ctx.ReadResource("doppler-native:configs/v3:ConfigLogsRollback", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigLogsRollback resources.
type configLogsRollbackState struct {
}

type ConfigLogsRollbackState struct {
}

func (ConfigLogsRollbackState) ElementType() reflect.Type {
	return reflect.TypeOf((*configLogsRollbackState)(nil)).Elem()
}

type configLogsRollbackArgs struct {
}

// The set of arguments for constructing a ConfigLogsRollback resource.
type ConfigLogsRollbackArgs struct {
}

func (ConfigLogsRollbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configLogsRollbackArgs)(nil)).Elem()
}

type ConfigLogsRollbackInput interface {
	pulumi.Input

	ToConfigLogsRollbackOutput() ConfigLogsRollbackOutput
	ToConfigLogsRollbackOutputWithContext(ctx context.Context) ConfigLogsRollbackOutput
}

func (*ConfigLogsRollback) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLogsRollback)(nil)).Elem()
}

func (i *ConfigLogsRollback) ToConfigLogsRollbackOutput() ConfigLogsRollbackOutput {
	return i.ToConfigLogsRollbackOutputWithContext(context.Background())
}

func (i *ConfigLogsRollback) ToConfigLogsRollbackOutputWithContext(ctx context.Context) ConfigLogsRollbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLogsRollbackOutput)
}

type ConfigLogsRollbackOutput struct{ *pulumi.OutputState }

func (ConfigLogsRollbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLogsRollback)(nil)).Elem()
}

func (o ConfigLogsRollbackOutput) ToConfigLogsRollbackOutput() ConfigLogsRollbackOutput {
	return o
}

func (o ConfigLogsRollbackOutput) ToConfigLogsRollbackOutputWithContext(ctx context.Context) ConfigLogsRollbackOutput {
	return o
}

func (o ConfigLogsRollbackOutput) Log() LogPropertiesPtrOutput {
	return o.ApplyT(func(v *ConfigLogsRollback) LogPropertiesPtrOutput { return v.Log }).(LogPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLogsRollbackInput)(nil)).Elem(), &ConfigLogsRollback{})
	pulumi.RegisterOutputType(ConfigLogsRollbackOutput{})
}
