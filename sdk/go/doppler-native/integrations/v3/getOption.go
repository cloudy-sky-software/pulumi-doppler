// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetOption(ctx *pulumi.Context, args *GetOptionArgs, opts ...pulumi.InvokeOption) (*GetOptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOptionResult
	err := ctx.Invoke("doppler-native:integrations/v3:getOption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetOptionArgs struct {
}

type GetOptionResult struct {
	Items interface{} `pulumi:"items"`
}

func GetOptionOutput(ctx *pulumi.Context, args GetOptionOutputArgs, opts ...pulumi.InvokeOption) GetOptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOptionResult, error) {
			args := v.(GetOptionArgs)
			r, err := GetOption(ctx, &args, opts...)
			var s GetOptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOptionResultOutput)
}

type GetOptionOutputArgs struct {
}

func (GetOptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOptionArgs)(nil)).Elem()
}

type GetOptionResultOutput struct{ *pulumi.OutputState }

func (GetOptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOptionResult)(nil)).Elem()
}

func (o GetOptionResultOutput) ToGetOptionResultOutput() GetOptionResultOutput {
	return o
}

func (o GetOptionResultOutput) ToGetOptionResultOutputWithContext(ctx context.Context) GetOptionResultOutput {
	return o
}

func (o GetOptionResultOutput) Items() pulumi.AnyOutput {
	return o.ApplyT(func(v GetOptionResult) interface{} { return v.Items }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOptionResultOutput{})
}
