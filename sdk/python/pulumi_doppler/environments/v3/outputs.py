# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'EnvironmentProperties',
    'GetEnvironmentProperties',
    'GetEnvironmentPropertiesEnvironmentProperties',
    'ListEnvironmentsProperties',
    'ListEnvironmentsPropertiesEnvironmentsItemProperties',
]

@pulumi.output_type
class EnvironmentProperties(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "createdAt":
            suggest = "created_at"
        elif key == "initialFetchAt":
            suggest = "initial_fetch_at"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in EnvironmentProperties. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        EnvironmentProperties.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        EnvironmentProperties.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 id: Optional[str] = None,
                 initial_fetch_at: Optional[str] = None,
                 name: Optional[str] = None,
                 project: Optional[str] = None):
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if initial_fetch_at is not None:
            pulumi.set(__self__, "initial_fetch_at", initial_fetch_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project is not None:
            pulumi.set(__self__, "project", project)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="initialFetchAt")
    def initial_fetch_at(self) -> Optional[str]:
        return pulumi.get(self, "initial_fetch_at")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def project(self) -> Optional[str]:
        return pulumi.get(self, "project")


@pulumi.output_type
class GetEnvironmentProperties(dict):
    def __init__(__self__, *,
                 environment: Optional['outputs.GetEnvironmentPropertiesEnvironmentProperties'] = None):
        if environment is not None:
            pulumi.set(__self__, "environment", environment)

    @property
    @pulumi.getter
    def environment(self) -> Optional['outputs.GetEnvironmentPropertiesEnvironmentProperties']:
        return pulumi.get(self, "environment")


@pulumi.output_type
class GetEnvironmentPropertiesEnvironmentProperties(dict):
    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 id: Optional[str] = None,
                 initial_fetch_at: Optional[str] = None,
                 name: Optional[str] = None,
                 project: Optional[str] = None):
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if initial_fetch_at is not None:
            pulumi.set(__self__, "initial_fetch_at", initial_fetch_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project is not None:
            pulumi.set(__self__, "project", project)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="initialFetchAt")
    def initial_fetch_at(self) -> Optional[str]:
        return pulumi.get(self, "initial_fetch_at")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def project(self) -> Optional[str]:
        return pulumi.get(self, "project")


@pulumi.output_type
class ListEnvironmentsProperties(dict):
    def __init__(__self__, *,
                 environments: Optional[Sequence['outputs.ListEnvironmentsPropertiesEnvironmentsItemProperties']] = None,
                 page: Optional[int] = None):
        if environments is not None:
            pulumi.set(__self__, "environments", environments)
        if page is None:
            page = 0
        if page is not None:
            pulumi.set(__self__, "page", page)

    @property
    @pulumi.getter
    def environments(self) -> Optional[Sequence['outputs.ListEnvironmentsPropertiesEnvironmentsItemProperties']]:
        return pulumi.get(self, "environments")

    @property
    @pulumi.getter
    def page(self) -> Optional[int]:
        return pulumi.get(self, "page")


@pulumi.output_type
class ListEnvironmentsPropertiesEnvironmentsItemProperties(dict):
    def __init__(__self__, *,
                 created_at: Optional[str] = None,
                 id: Optional[str] = None,
                 initial_fetch_at: Optional[str] = None,
                 name: Optional[str] = None,
                 project: Optional[str] = None):
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if initial_fetch_at is not None:
            pulumi.set(__self__, "initial_fetch_at", initial_fetch_at)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project is not None:
            pulumi.set(__self__, "project", project)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[str]:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="initialFetchAt")
    def initial_fetch_at(self) -> Optional[str]:
        return pulumi.get(self, "initial_fetch_at")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def project(self) -> Optional[str]:
        return pulumi.get(self, "project")


