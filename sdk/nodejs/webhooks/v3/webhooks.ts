// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class Webhooks extends pulumi.CustomResource {
    /**
     * Get an existing Webhooks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Webhooks {
        return new Webhooks(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'doppler-native:webhooks/v3:Webhooks';

    /**
     * Returns true if the given object is an instance of Webhooks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhooks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhooks.__pulumiType;
    }

    public readonly authentication!: pulumi.Output<outputs.webhooks.v3.AuthenticationProperties | undefined>;
    /**
     * Config slugs that the webhook should be enabled for
     */
    public readonly enableConfigs!: pulumi.Output<string[] | undefined>;
    /**
     * See: https://docs.doppler.com/docs/webhooks#default-payload
     */
    public readonly payload!: pulumi.Output<string | undefined>;
    /**
     * See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
     */
    public readonly secret!: pulumi.Output<string | undefined>;
    /**
     * The webhook URL. Must be https
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a Webhooks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhooksArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["enableConfigs"] = args ? args.enableConfigs : undefined;
            resourceInputs["payload"] = args ? args.payload : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        } else {
            resourceInputs["authentication"] = undefined /*out*/;
            resourceInputs["enableConfigs"] = undefined /*out*/;
            resourceInputs["payload"] = undefined /*out*/;
            resourceInputs["secret"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Webhooks.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Webhooks resource.
 */
export interface WebhooksArgs {
    authentication?: pulumi.Input<inputs.webhooks.v3.AuthenticationPropertiesArgs>;
    /**
     * Config slugs that the webhook should be enabled for
     */
    enableConfigs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * See: https://docs.doppler.com/docs/webhooks#default-payload
     */
    payload?: pulumi.Input<string>;
    /**
     * See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
     */
    secret?: pulumi.Input<string>;
    /**
     * The webhook URL. Must be https
     */
    url: pulumi.Input<string>;
}
