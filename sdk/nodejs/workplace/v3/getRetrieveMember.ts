// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getRetrieveMember(args: GetRetrieveMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetRetrieveMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("doppler-native:workplace/v3:getRetrieveMember", {
        "groupSlug": args.groupSlug,
        "memberSlug": args.memberSlug,
        "memberType": args.memberType,
    }, opts);
}

export interface GetRetrieveMemberArgs {
    /**
     * The group's slug
     */
    groupSlug: string;
    /**
     * The member's slug
     */
    memberSlug: string;
    memberType: string;
}

export interface GetRetrieveMemberResult {
    readonly items: outputs.workplace.v3.GetRetrieveMemberProperties;
}
export function getRetrieveMemberOutput(args: GetRetrieveMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRetrieveMemberResult> {
    return pulumi.output(args).apply((a: any) => getRetrieveMember(a, opts))
}

export interface GetRetrieveMemberOutputArgs {
    /**
     * The group's slug
     */
    groupSlug: pulumi.Input<string>;
    /**
     * The member's slug
     */
    memberSlug: pulumi.Input<string>;
    memberType: pulumi.Input<string>;
}
