// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.MeV3
{
    public static class GetAuthMe
    {
        public static Task<GetAuthMeResult> InvokeAsync(GetAuthMeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthMeResult>("doppler-native:me/v3:getAuthMe", args ?? new GetAuthMeArgs(), options.WithDefaults());

        public static Output<GetAuthMeResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthMeResult>("doppler-native:me/v3:getAuthMe", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetAuthMeArgs : global::Pulumi.InvokeArgs
    {
        public GetAuthMeArgs()
        {
        }
        public static new GetAuthMeArgs Empty => new GetAuthMeArgs();
    }


    [OutputType]
    public sealed class GetAuthMeResult
    {
        public readonly Outputs.GetAuthMeProperties Items;

        [OutputConstructor]
        private GetAuthMeResult(Outputs.GetAuthMeProperties items)
        {
            Items = items;
        }
    }
}
