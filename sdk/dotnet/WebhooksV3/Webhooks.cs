// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.WebhooksV3
{
    [DopplerNativeResourceType("doppler-native:webhooks/v3:Webhooks")]
    public partial class Webhooks : global::Pulumi.CustomResource
    {
        [Output("authentication")]
        public Output<Outputs.AuthenticationProperties?> Authentication { get; private set; } = null!;

        /// <summary>
        /// Config slugs that the webhook should be enabled for
        /// </summary>
        [Output("enableConfigs")]
        public Output<ImmutableArray<string>> EnableConfigs { get; private set; } = null!;

        /// <summary>
        /// See: https://docs.doppler.com/docs/webhooks#default-payload
        /// </summary>
        [Output("payload")]
        public Output<string?> Payload { get; private set; } = null!;

        /// <summary>
        /// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
        /// </summary>
        [Output("secret")]
        public Output<string?> Secret { get; private set; } = null!;

        /// <summary>
        /// The webhook URL. Must be https
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Webhooks resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Webhooks(string name, WebhooksArgs args, CustomResourceOptions? options = null)
            : base("doppler-native:webhooks/v3:Webhooks", name, args ?? new WebhooksArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Webhooks(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("doppler-native:webhooks/v3:Webhooks", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-doppler-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Webhooks resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Webhooks Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Webhooks(name, id, options);
        }
    }

    public sealed class WebhooksArgs : global::Pulumi.ResourceArgs
    {
        [Input("authentication")]
        public Input<Inputs.AuthenticationPropertiesArgs>? Authentication { get; set; }

        [Input("enableConfigs")]
        private InputList<string>? _enableConfigs;

        /// <summary>
        /// Config slugs that the webhook should be enabled for
        /// </summary>
        public InputList<string> EnableConfigs
        {
            get => _enableConfigs ?? (_enableConfigs = new InputList<string>());
            set => _enableConfigs = value;
        }

        /// <summary>
        /// See: https://docs.doppler.com/docs/webhooks#default-payload
        /// </summary>
        [Input("payload")]
        public Input<string>? Payload { get; set; }

        /// <summary>
        /// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        /// <summary>
        /// The webhook URL. Must be https
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public WebhooksArgs()
        {
        }
        public static new WebhooksArgs Empty => new WebhooksArgs();
    }
}
