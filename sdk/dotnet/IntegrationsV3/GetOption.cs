// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.IntegrationsV3
{
    public static class GetOption
    {
        public static Task<GetOptionResult> InvokeAsync(GetOptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOptionResult>("doppler-native:integrations/v3:getOption", args ?? new GetOptionArgs(), options.WithDefaults());

        public static Output<GetOptionResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOptionResult>("doppler-native:integrations/v3:getOption", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetOptionArgs : global::Pulumi.InvokeArgs
    {
        public GetOptionArgs()
        {
        }
        public static new GetOptionArgs Empty => new GetOptionArgs();
    }


    [OutputType]
    public sealed class GetOptionResult
    {
        public readonly object Items;

        [OutputConstructor]
        private GetOptionResult(object items)
        {
            Items = items;
        }
    }
}
