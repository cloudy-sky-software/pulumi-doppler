// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.ConfigsV3
{
    public static class ListConfigs
    {
        public static Task<ListConfigsResult> InvokeAsync(ListConfigsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListConfigsResult>("doppler-native:configs/v3:listConfigs", args ?? new ListConfigsArgs(), options.WithDefaults());

        public static Output<ListConfigsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListConfigsResult>("doppler-native:configs/v3:listConfigs", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListConfigsArgs : global::Pulumi.InvokeArgs
    {
        public ListConfigsArgs()
        {
        }
        public static new ListConfigsArgs Empty => new ListConfigsArgs();
    }


    [OutputType]
    public sealed class ListConfigsResult
    {
        public readonly Outputs.ListConfigsProperties Items;

        [OutputConstructor]
        private ListConfigsResult(Outputs.ListConfigsProperties items)
        {
            Items = items;
        }
    }
}
