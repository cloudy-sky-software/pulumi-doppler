// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.ConfigsV3
{
    public static class GetSecretsName
    {
        public static Task<GetSecretsNameResult> InvokeAsync(GetSecretsNameArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretsNameResult>("doppler-native:configs/v3:getSecretsName", args ?? new GetSecretsNameArgs(), options.WithDefaults());

        public static Output<GetSecretsNameResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretsNameResult>("doppler-native:configs/v3:getSecretsName", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetSecretsNameArgs : global::Pulumi.InvokeArgs
    {
        public GetSecretsNameArgs()
        {
        }
        public static new GetSecretsNameArgs Empty => new GetSecretsNameArgs();
    }


    [OutputType]
    public sealed class GetSecretsNameResult
    {
        public readonly Outputs.GetSecretsNameProperties Items;

        [OutputConstructor]
        private GetSecretsNameResult(Outputs.GetSecretsNameProperties items)
        {
            Items = items;
        }
    }
}
