// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.ConfigsV3
{
    public static class GetSecret
    {
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("doppler-native:configs/v3:getSecret", args ?? new GetSecretArgs(), options.WithDefaults());

        public static Output<GetSecretResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretResult>("doppler-native:configs/v3:getSecret", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetSecretArgs : global::Pulumi.InvokeArgs
    {
        public GetSecretArgs()
        {
        }
        public static new GetSecretArgs Empty => new GetSecretArgs();
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly Outputs.GetSecretProperties Items;

        [OutputConstructor]
        private GetSecretResult(Outputs.GetSecretProperties items)
        {
            Items = items;
        }
    }
}
