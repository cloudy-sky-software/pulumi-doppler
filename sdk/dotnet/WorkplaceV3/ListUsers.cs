// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.WorkplaceV3
{
    public static class ListUsers
    {
        public static Task<ListUsersResult> InvokeAsync(ListUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListUsersResult>("doppler-native:workplace/v3:listUsers", args ?? new ListUsersArgs(), options.WithDefaults());

        public static Output<ListUsersResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListUsersResult>("doppler-native:workplace/v3:listUsers", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListUsersArgs : global::Pulumi.InvokeArgs
    {
        public ListUsersArgs()
        {
        }
        public static new ListUsersArgs Empty => new ListUsersArgs();
    }


    [OutputType]
    public sealed class ListUsersResult
    {
        public readonly Outputs.ListUsersProperties Items;

        [OutputConstructor]
        private ListUsersResult(Outputs.ListUsersProperties items)
        {
            Items = items;
        }
    }
}
