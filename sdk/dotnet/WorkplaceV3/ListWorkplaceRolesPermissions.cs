// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.WorkplaceV3
{
    public static class ListWorkplaceRolesPermissions
    {
        public static Task<ListWorkplaceRolesPermissionsResult> InvokeAsync(ListWorkplaceRolesPermissionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListWorkplaceRolesPermissionsResult>("doppler-native:workplace/v3:listWorkplaceRolesPermissions", args ?? new ListWorkplaceRolesPermissionsArgs(), options.WithDefaults());

        public static Output<ListWorkplaceRolesPermissionsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListWorkplaceRolesPermissionsResult>("doppler-native:workplace/v3:listWorkplaceRolesPermissions", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListWorkplaceRolesPermissionsArgs : global::Pulumi.InvokeArgs
    {
        public ListWorkplaceRolesPermissionsArgs()
        {
        }
        public static new ListWorkplaceRolesPermissionsArgs Empty => new ListWorkplaceRolesPermissionsArgs();
    }


    [OutputType]
    public sealed class ListWorkplaceRolesPermissionsResult
    {
        public readonly Outputs.ListWorkplaceRolesPermissionsProperties Items;

        [OutputConstructor]
        private ListWorkplaceRolesPermissionsResult(Outputs.ListWorkplaceRolesPermissionsProperties items)
        {
            Items = items;
        }
    }
}
