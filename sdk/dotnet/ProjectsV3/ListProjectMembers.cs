// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DopplerNative.ProjectsV3
{
    public static class ListProjectMembers
    {
        public static Task<ListProjectMembersResult> InvokeAsync(ListProjectMembersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListProjectMembersResult>("doppler-native:projects/v3:listProjectMembers", args ?? new ListProjectMembersArgs(), options.WithDefaults());

        public static Output<ListProjectMembersResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListProjectMembersResult>("doppler-native:projects/v3:listProjectMembers", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListProjectMembersArgs : global::Pulumi.InvokeArgs
    {
        public ListProjectMembersArgs()
        {
        }
        public static new ListProjectMembersArgs Empty => new ListProjectMembersArgs();
    }


    [OutputType]
    public sealed class ListProjectMembersResult
    {
        public readonly Outputs.ListProjectMembersProperties Items;

        [OutputConstructor]
        private ListProjectMembersResult(Outputs.ListProjectMembersProperties items)
        {
            Items = items;
        }
    }
}
